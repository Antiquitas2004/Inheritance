// Inheritance supports the concept of reusability and uses the keyword "extends". 
// The class whose features are inherited is known as "super class"
// The class that inherits the other class is known as "sub class"
// Inheritance can be singular, multilevel, hierarchical or a hybrid.

package animal;

public class Animal
{  
	public Animal()
		{        
		System.out.println("A new animal has been created!\n");       
		} 	
	public void sleep()
		{        
		System.out.println("An animal sleeps...");       
		}    
	public void eat()
		{        
		System.out.println("An animal eats...");
		}
	
	public static void main(String args[])
	{      
		Cat cat = new Cat();      
		cat.eat();      
		cat.sleep();      
		cat.purr(); 
		Dog dog = new Dog();      
		dog.eat();      
		dog.sleep();      
		dog.bark(); 
	}  
	public static class Cat extends Animal
		{    
			public Cat()
			{        
				super();        
				System.out.println("A new cat has been created!\n");      
			} 
			public void sleep()
			{        
			System.out.println("A cat sleeps...");      
			}    
			public void purr()
			{        
			System.out.println("A cat purrs...\n");      
			}      
			public void eat()
			{        
			System.out.println("A cat eats...");
			}
			
		}
	public static class Dog extends Animal
	{    
		public Dog()
		{        
			super();        
			System.out.println("A new dog has been created!\n");      
		} 
		public void sleep()
		{        
		System.out.println("A dog sleeps...");      
		}    
		public void bark()
		{        
		System.out.println("A dog barks...\n");      
		}      
		public void eat()
		{        
		System.out.println("A dog eats...");
		}
		
	}
	}

